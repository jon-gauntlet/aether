#!/bin/bash

# Cursor Wrapper
# Automatically detects and sets appropriate Claude context

set -euo pipefail

CURSOR_BIN="/home/jon/.local/bin/cursor"
CURSOR_SHARE="/home/jon/.local/share/cursor"

detect_context_type() {
    local workspace="$1"
    local abs_path=$(realpath "$workspace")
    
    # System context if:
    # 1. Path is root (/)
    # 2. Path is in /etc, /usr, /var, etc.
    # 3. Path contains systemd units, system configs
    if [[ "$abs_path" == "/" ]] || \
       [[ "$abs_path" =~ ^/(etc|usr|var|srv|opt|boot|lib|bin|sbin) ]] || \
       [[ "$abs_path" =~ systemd|system|config ]]; then
        echo "system"
        return 0
    fi
    
    # Project context is default
    echo "project"
    return 0
}

setup_context() {
    local workspace="$1"
    local context_type=$(detect_context_type "$workspace")
    local slice_name="cursor-claude-${context_type}.slice"
    
    # Ensure slice exists and is active
    if ! systemctl --user is-active "$slice_name" >/dev/null 2>&1; then
        systemctl --user start "$slice_name" || true
    fi
    
    # Initialize context
    /home/jon/scripts/cursor/context-crystallizer "$context_type" || true
    
    # Set environment variables
    export CURSOR_CONTEXT_TYPE="$context_type"
    export CURSOR_WORKSPACE="$workspace"
    export CURSOR_SLICE="$slice_name"
}

main() {
    local workspace="${1:-.}"
    
    # Setup context (but don't fail if it fails)
    setup_context "$workspace" || true
    
    # Execute cursor with all original arguments
    exec "$CURSOR_BIN" "$@"
}

main "$@"