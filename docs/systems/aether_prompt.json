{
  "context_loading": {
    "primary_source": "docs/systems/aether_context.json",
    "initialization_steps": [
      "Load and parse the context file",
      "Understand current type system architecture",
      "Review development patterns and principles",
      "Note current focus and next steps",
      "Study implementation details and relationships",
      "Review tooling configuration and requirements"
    ],
    "critical_sections": {
      "type_system": [
        "Understand type composition patterns",
        "Note capability-driven design",
        "Review strict type requirements"
      ],
      "implementation": [
        "Study existing type relationships",
        "Note import patterns and rules",
        "Review documentation requirements"
      ],
      "tooling": [
        "Understand linting configuration",
        "Note testing requirements",
        "Review documentation standards"
      ]
    }
  },
  "key_considerations": {
    "type_management": {
      "composites_layer": {
        "purpose": "Central location for complex type compositions",
        "guidelines": [
          "Keep types focused and composable",
          "Maintain clear domain separation",
          "Ensure proper import structure",
          "Follow capability-based design",
          "Implement strict null checks",
          "Prefer readonly types"
        ],
        "implementation": {
          "file_structure": [
            "Group related types",
            "Maximum 500 lines per file",
            "Clear type organization"
          ],
          "documentation": [
            "TSDoc for all exports",
            "Include usage examples",
            "Document relationships"
          ],
          "testing": [
            "Co-locate type tests",
            "Ensure full coverage",
            "Handle edge cases"
          ]
        }
      }
    },
    "development_flow": {
      "priorities": [
        "Clean architecture maintenance",
        "Type organization clarity",
        "Documentation completeness",
        "Test coverage",
        "Breaking change management"
      ],
      "tooling": {
        "linting": [
          "Follow naming conventions",
          "Prevent circular dependencies",
          "Require documentation"
        ],
        "testing": [
          "Write comprehensive tests",
          "Maintain coverage requirements",
          "Test edge cases"
        ]
      }
    }
  },
  "continuation_guidelines": {
    "type_consolidation": {
      "approach": [
        "Review existing type organization",
        "Identify consolidation opportunities",
        "Maintain established patterns",
        "Document changes clearly",
        "Update affected systems",
        "Add comprehensive tests"
      ],
      "implementation": {
        "steps": [
          "Study current type relationships",
          "Plan consolidation strategy",
          "Implement changes incrementally",
          "Update documentation",
          "Add/update tests",
          "Verify dependent systems"
        ],
        "quality_checks": [
          "Verify import structure",
          "Check documentation completeness",
          "Ensure test coverage",
          "Validate breaking changes"
        ]
      }
    },
    "code_quality": {
      "standards": [
        "Follow established naming conventions",
        "Maintain type separation principles",
        "Ensure proper import organization",
        "Keep documentation current",
        "Maintain test coverage",
        "Handle edge cases"
      ],
      "verification": {
        "pre_commit": [
          "Run linting checks",
          "Execute test suite",
          "Verify documentation",
          "Check import structure"
        ],
        "review": [
          "Assess type relationships",
          "Verify capability usage",
          "Check breaking changes",
          "Validate test coverage"
        ]
      }
    }
  }
} 