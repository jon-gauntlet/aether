[tool.poetry]
name = "rag-aether"
version = "0.1.0"
description = "Advanced RAG system with flow protection"
authors = ["Your Name <your.email@example.com>"]

[tool.poetry.dependencies]
python = "^3.13"
sentence-transformers = "^2.2.2"
faiss-cpu = "^1.7.4"
numpy = "^1.26.3"
aiohttp = "^3.9.1"
python-dotenv = "^1.0.0"
firebase-admin = "^6.3.0"
openai = "^1.10.0"
psutil = "^5.9.8"
rank-bm25 = "^0.2.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.5"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.5.0"
pytest-testmon = "^2.1.0"
pytest-watch = "^4.2.0"
hypothesis = "^6.92.1"
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.4.1"
psutil = "^5.9.0"
playwright = "^1.41.0"
boto3 = "^1.34.14"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short -n auto --durations=10"
asyncio_mode = "auto"
markers = [
    "unit: mark test as unit test",
    "fast: mark test as fast test",
    "integration: mark test as integration test",
    "slow: mark test as slow running"
]

fast_select = "not slow and not integration"

[tool.coverage.run]
branch = true
source = ["rag_aether"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
] 