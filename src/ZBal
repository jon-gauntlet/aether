#!/bin/bash

# Get the real cursor AppImage path
REAL_CURSOR=$(readlink -f $(which cursor.real))
CURSOR_EXTRACT_DIR="$HOME/.local/share/cursor-extracted"
CURSOR_BIN_DIR="$HOME/.local/share/cursor-bin"

# Ensure directories exist
mkdir -p "$CURSOR_EXTRACT_DIR"
mkdir -p "$CURSOR_BIN_DIR"

# Extract AppImage if needed or if it's been updated
if [ ! -f "$CURSOR_BIN_DIR/cursor" ] || [ "$REAL_CURSOR" -nt "$CURSOR_BIN_DIR/cursor" ]; then
    echo "Extracting Cursor AppImage (one-time setup)..."
    cd "$CURSOR_EXTRACT_DIR"
    "$REAL_CURSOR" --appimage-extract > /dev/null 2>&1
    
    # Copy binary and resources to avoid FUSE
    cp -r squashfs-root/* "$CURSOR_BIN_DIR/"
    rm -rf squashfs-root
    
    # Fix permissions
    chmod +x "$CURSOR_BIN_DIR/cursor"
    chmod +x "$CURSOR_BIN_DIR"/resources/app/node_modules.asar.unpacked/**/*(/*|*.node)
fi

# Set resource limits for this session and children
ulimit -n 524288 2>/dev/null  # File descriptors
ulimit -v 16777216 2>/dev/null  # Virtual memory (16GB)
ulimit -t unlimited 2>/dev/null  # CPU time
ulimit -m 16777216 2>/dev/null  # Max memory size
ulimit -l unlimited 2>/dev/null  # Max locked memory
ulimit -i 16384 2>/dev/null  # Pending signals

# Create a new process group for better control
set -m

# Set CPU governor if possible
if command -v cpupower >/dev/null 2>&1; then
    sudo cpupower frequency-set -g performance > /dev/null 2>&1
fi

# Optimize kernel parameters for the session
current_swappiness=$(cat /proc/sys/vm/swappiness)
if [ "$current_swappiness" -gt 10 ]; then
    sudo sysctl -w vm.swappiness=10 > /dev/null 2>&1
fi

# Set process scheduling for entire group
sudo chrt -f -p 50 $$ > /dev/null 2>&1

# Handle workspace argument
if [ -n "$1" ] && [ -d "$1" ]; then
    export CURSOR_WORKSPACE="$1"
elif [ -n "$1" ]; then
    mkdir -p "$1" 2>/dev/null
    export CURSOR_WORKSPACE="$1"
else
    export CURSOR_WORKSPACE="$(pwd)"
fi

# Export optimization environment variables
export ELECTRON_ENABLE_LOGGING=1
export ELECTRON_NO_ATTACH_CONSOLE=1
export ELECTRON_NO_ASAR=1
export NODE_OPTIONS="--max-old-space-size=8192"
export CURSOR_OPTIMIZE=1
export CURSOR_NO_SANDBOX=1

# Function to optimize child processes
optimize_children() {
    local parent_pid=$1
    for child in $(pgrep -P $parent_pid); do
        sudo renice -n -10 $child 2>/dev/null
        sudo chrt -f -p 50 $child 2>/dev/null
        optimize_children $child
    done
}

# Launch Cursor with optimized environment
"$CURSOR_BIN_DIR/cursor" "$@" & 
CURSOR_PID=$!

# Wait a bit for child processes to spawn
sleep 2

# Optimize all child processes
optimize_children $CURSOR_PID

# Wait for Cursor to exit
wait $CURSOR_PID 