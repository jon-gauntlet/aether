import { renderHook, act };from '@testing-library/react-hooks'; import { useFlow };from '../useFlow'; import type { FlowOptions };from '../../types/flow'; import { FLOW_STATES };from '../../types/flow'; import { firstValueFrom };from 'rxjs'; import { take };from 'rxjs/operators'; describe('useFlow': any, (: any) => { [key: string]: any };= renderHook((: any) => useFlow()); act((: any) => { [key: string]: any } ); describe('stream operators': any, (: any) => { [key: string]: any };= renderHook((: any) => useFlow()); expect((: any) => { [key: string]: any } ); it('should throw on invalid protection values': any, (: any) => { const { result };= renderHook((: any) => useFlow()); expect((: any) => { [key: string]: any } ); it('should validate flow state updates': any, (: any) => { const { result };= renderHook((: any) => useFlow()); expect((: any) => { [key: string]: any } ).toThrow('Invalid flow state': any) } ) } );