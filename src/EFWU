#!/bin/bash

# Prevent potential recursion
if [[ -n "${CURSOR_WRAPPER_ACTIVE}" ]]; then
    echo "Error: Detected recursive wrapper call. Exiting."
    exit 1
fi
export CURSOR_WRAPPER_ACTIVE=1

# Find the real Cursor binary, explicitly avoiding our wrapper
CURSOR_BINARY=""
for path in \
    "/opt/cursor/cursor" \
    "/usr/lib/cursor/cursor" \
    "/usr/share/cursor/cursor" \
    "/usr/bin/cursor.real" \
    "/usr/bin/cursor-bin" \
    "/usr/bin/cursor"
do
    if [[ -x "$path" && "$path" != "$0" && ! -L "$path" ]]; then
        CURSOR_BINARY="$path"
        break
    fi
done

if [[ -z "$CURSOR_BINARY" ]]; then
    echo "Error: Could not find Cursor binary. Please ensure Cursor is installed."
    exit 1
fi

# Set optimization environment variables
export ELECTRON_ENABLE_LOGGING=1
export ELECTRON_NO_ATTACH_CONSOLE=1
export ELECTRON_NO_ASAR=1
export NODE_OPTIONS="--max-old-space-size=8192"
export CURSOR_OPTIMIZE=1

# Set resource limits
ulimit -n 524288 2>/dev/null  # File descriptors
ulimit -v 16777216 2>/dev/null  # Virtual memory (16GB)
ulimit -t unlimited 2>/dev/null  # CPU time
ulimit -m 16777216 2>/dev/null  # Max memory size
ulimit -l unlimited 2>/dev/null  # Max locked memory
ulimit -i 16384 2>/dev/null  # Pending signals

# Debug info if needed
if [[ -n "$CURSOR_DEBUG" ]]; then
    echo "Launching Cursor from: $CURSOR_BINARY"
    echo "With arguments: $@"
fi

# Launch Cursor with explicit binary path
exec "$CURSOR_BINARY" "$@"