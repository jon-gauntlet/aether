#!/usr/bin/env zsh

# Gauntlet Command (g)
# Optimized for 80-100hr/week sustained development

# Exit if being sourced
[[ $ZSH_EVAL_CONTEXT == *:file:* ]] && return 0

# Colors
[[ -z "$NO_COLOR" ]] && {
    GREEN='\033[0;32m'
    YELLOW='\033[1;33m'
    BLUE='\033[0;34m'
    RED='\033[0;31m'
    NC='\033[0m'
}

# Data storage (single source of truth)
DATA_DIR="$HOME/.local/share/gauntlet"
mkdir -p "$DATA_DIR"/{brain,deep,timer,stats}

# Show help if needed
[[ "$1" == "help" || $# -eq 0 ]] && {
    cat << EOF
Gauntlet Command - Optimized for Excellence

Core Commands:
  g deep      Toggle deep work mode
  g note      Quick insight capture
  g brain     Manage knowledge gains
  g timer     Focus timer (25/45min)
  g stats     Show progress metrics

Deep Work Features:
  - Blocks distractions
  - Tracks focus time
  - Protects peak hours
  - Orthodox mode

Tips shown during use!
EOF
    exit 0
}

# Deep work state management
DEEP_FILE="$DATA_DIR/deep/status"
HOSTS_BACKUP="$DATA_DIR/deep/hosts.bak"

# Toggle deep work mode
toggle_deep() {
    if [[ -f "$DEEP_FILE" ]]; then
        # Exit deep work
        sudo mv "$HOSTS_BACKUP" /etc/hosts
        notify-send "DUNST_COMMAND_RESUME"
        local start_time=$(tail -n 1 "$DEEP_FILE")
        local duration=$(( ($(date +%s) - start_time) / 60 ))
        echo "$(date +%Y-%m-%d\ %H:%M) - Deep work: ${duration}min" >> "$DATA_DIR/stats/deep.log"
        rm "$DEEP_FILE"
        echo -e "${GREEN}Deep Work Complete - ${duration}min${NC}"
    else
        # Orthodox check
        [[ $(date +%u) -eq 7 ]] && {
            echo -e "${YELLOW}Orthodox Sunday - Consider your observance${NC}"
            read -p "Continue? [y/N] " confirm
            [[ "$confirm" != "y" ]] && return 1
        }
        
        # Enter deep work
        sudo cp /etc/hosts "$HOSTS_BACKUP"
        sudo sh -c 'cat >> /etc/hosts' << EOF
# Deep Work Mode
127.0.0.1 twitter.com www.twitter.com
127.0.0.1 facebook.com www.facebook.com
127.0.0.1 reddit.com www.reddit.com
127.0.0.1 youtube.com www.youtube.com
127.0.0.1 news.ycombinator.com
EOF
        notify-send "DUNST_COMMAND_PAUSE"
        date +%s > "$DEEP_FILE"
        
        echo -e "${GREEN}Deep Work Mode Active${NC}"
        echo "Tips:"
        echo "1. Close extra browser tabs"
        echo "2. Phone in another room"
        echo "3. Water nearby"
        echo "4. g timer 45"
    fi
}

# Quick note with context
add_note() {
    local file="$DATA_DIR/brain/notes.md"
    local context=""
    [[ -f "$DEEP_FILE" ]] && context=" (Deep Work)"
    echo -e "\n## $(date +%Y-%m-%d\ %H:%M)${context}\n$*" >> "$file"
    echo -e "${GREEN}âœ“ Note captured${NC}"
}

# Focus timer with smart defaults
start_timer() {
    local duration=${1:-25}
    [[ -f "$DEEP_FILE" ]] && duration=${1:-45}
    
    local end=$(($(date +%s) + duration * 60))
    echo -e "${BLUE}Starting ${duration}min focus block${NC}"
    
    while [ $(date +%s) -lt $end ]; do
        clear
        local remaining=$((end - $(date +%s)))
        local min=$((remaining / 60))
        local sec=$((remaining % 60))
        printf "${GREEN}%02d:%02d${NC} remaining\n" $min $sec
        sleep 1
    done
    
    notify-send "Block Complete" "${duration}min finished"
    echo "$(date +%Y-%m-%d\ %H:%M) - Timer: ${duration}min" >> "$DATA_DIR/stats/timer.log"
    echo -e "\n${GREEN}Block complete!${NC}"
}

# Progress metrics
show_stats() {
    echo -e "\n${BLUE}Today's Progress:${NC}"
    
    # Deep work time
    if [[ -f "$DEEP_FILE" ]]; then
        local start=$(cat "$DEEP_FILE")
        local current_duration=$(( ($(date +%s) - start) / 60 ))
        echo "Current deep work: ${current_duration}min"
    fi
    
    # Today's total deep work
    local today=$(date +%Y-%m-%d)
    local deep_total=$(grep "$today" "$DATA_DIR/stats/deep.log" | awk '{sum += $NF} END {print sum}')
    echo "Total deep work today: ${deep_total:-0}min"
    
    # Focus blocks
    local blocks=$(grep "$today" "$DATA_DIR/stats/timer.log" | wc -l)
    echo "Focus blocks: $blocks"
    
    # Notes count
    local notes=$(grep -c "^##.*$today" "$DATA_DIR/brain/notes.md")
    echo "Insights captured: $notes"
    
    # Recent notes
    echo -e "\n${BLUE}Recent Insights:${NC}"
    tail -n 5 "$DATA_DIR/brain/notes.md"
}

# Brain management
manage_brain() {
    local cmd=${1:-status}
    shift
    
    case $cmd in
        add)
            echo -e "\n${BLUE}New Learning:${NC}"
            echo -e "Topic: $*"
            echo "$(date +%Y-%m-%d\ %H:%M) - Learn: $*" >> "$DATA_DIR/stats/brain.log"
            g timer 45
            ;;
        review)
            echo -e "\n${BLUE}Knowledge Review:${NC}"
            tail -n 10 "$DATA_DIR/stats/brain.log"
            ;;
        *)
            echo -e "\n${BLUE}Brain Management:${NC}"
            echo "1. g brain add <topic>   Start learning"
            echo "2. g brain review        See history"
            echo "3. g note \"<insight>\"    Quick capture"
            ;;
    esac
}

# Handle commands
case $1 in
    deep) toggle_deep ;;
    note) shift; add_note "$*" ;;
    timer) shift; start_timer "$1" ;;
    stats) show_stats ;;
    brain) shift; manage_brain "$@" ;;
    optimize) shift; "$GAUNTLET_DIR/optimize" "$@" ;;
    *) show_help ;;
esac 