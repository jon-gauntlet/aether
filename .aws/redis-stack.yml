AWSTemplateFormatVersion: '2010-09-09'
Description: 'Aether Redis Infrastructure'

Parameters:
  Environment:
    Type: String
    Default: staging
    AllowedValues: [production, staging]
    Description: Environment name

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC where Redis will be deployed

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets for Redis cluster (minimum 2 for production)

  ContainerSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security group ID of the ECS containers

Conditions:
  IsProduction: !Equals [!Ref Environment, production]

Resources:
  # Redis Security Group
  RedisSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Redis cluster
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          SourceSecurityGroupId: !Ref ContainerSecurityGroupId
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-redis-sg
        - Key: Environment
          Value: !Ref Environment

  # Redis Subnet Group
  RedisSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnet group for Redis cluster
      SubnetIds: !Ref SubnetIds
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-redis-subnet-group
        - Key: Environment
          Value: !Ref Environment

  # Redis Parameter Group
  RedisParameterGroup:
    Type: AWS::ElastiCache::ParameterGroup
    Properties:
      CacheParameterGroupFamily: redis7
      Description: Parameter group for Aether Redis cluster
      Properties:
        maxmemory-policy: volatile-lru
        notify-keyspace-events: AKE
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Redis Replication Group (for production multi-AZ)
  RedisReplicationGroup:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupDescription: !Sub ${AWS::StackName}-redis-cluster
      Engine: redis
      EngineVersion: "7.0"
      CacheNodeType: !If 
        - IsProduction
        - cache.t4g.small
        - cache.t4g.micro
      NumCacheClusters: !If 
        - IsProduction
        - 2
        - 1
      AutomaticFailoverEnabled: !If 
        - IsProduction
        - true
        - false
      MultiAZEnabled: !If 
        - IsProduction
        - true
        - false
      CacheParameterGroupName: !Ref RedisParameterGroup
      CacheSubnetGroupName: !Ref RedisSubnetGroup
      SecurityGroupIds: 
        - !Ref RedisSecurityGroup
      AtRestEncryptionEnabled: true
      TransitEncryptionEnabled: true
      SnapshotRetentionLimit: !If 
        - IsProduction
        - 7
        - 1
      SnapshotWindow: "05:00-09:00"
      PreferredMaintenanceWindow: "sun:10:00-sun:14:00"
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # CloudWatch Alarms
  CPUUtilizationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Redis CPU utilization above 80%
      MetricName: CPUUtilization
      Namespace: AWS/ElastiCache
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      AlarmActions: []  # Add SNS topic ARN here when available
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: CacheClusterId
          Value: !Ref RedisReplicationGroup

  SwapUsageAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Redis swap usage above 50MB
      MetricName: SwapUsage
      Namespace: AWS/ElastiCache
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 50000000
      AlarmActions: []  # Add SNS topic ARN here when available
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: CacheClusterId
          Value: !Ref RedisReplicationGroup

Outputs:
  RedisEndpoint:
    Description: Redis primary endpoint
    Value: !GetAtt RedisReplicationGroup.PrimaryEndPoint.Address
    Export:
      Name: !Sub ${AWS::StackName}-redis-endpoint

  RedisPort:
    Description: Redis port
    Value: !GetAtt RedisReplicationGroup.PrimaryEndPoint.Port
    Export:
      Name: !Sub ${AWS::StackName}-redis-port

  RedisSecurityGroupId:
    Description: Redis security group ID
    Value: !Ref RedisSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-redis-sg 